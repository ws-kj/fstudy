{"ast":null,"code":"'use strict';\n\nvar dagNodeUtil = require('./util');\n\nvar cloneLinks = dagNodeUtil.cloneLinks;\nvar cloneData = dagNodeUtil.cloneData;\n\nvar create = require('./create');\n\nfunction rmLink(dagNode, nameOrMultihash, callback) {\n  var data = cloneData(dagNode);\n  var links = cloneLinks(dagNode);\n\n  if (typeof nameOrMultihash === 'string') {\n    links = links.filter(function (link) {\n      return link.name !== nameOrMultihash;\n    });\n  } else if (Buffer.isBuffer(nameOrMultihash)) {\n    links = links.filter(function (link) {\n      return !link.multihash.equals(nameOrMultihash);\n    });\n  } else {\n    return callback(new Error('second arg needs to be a name or multihash'), null);\n  }\n\n  create(data, links, callback);\n}\n\nmodule.exports = rmLink;","map":{"version":3,"sources":["/home/will/src/fstudy/client/node_modules/ipld-dag-pb/src/dag-node/rmLink.js"],"names":["dagNodeUtil","require","cloneLinks","cloneData","create","rmLink","dagNode","nameOrMultihash","callback","data","links","filter","link","name","Buffer","isBuffer","multihash","equals","Error","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;;AACA,IAAMC,UAAU,GAAGF,WAAW,CAACE,UAA/B;AACA,IAAMC,SAAS,GAAGH,WAAW,CAACG,SAA9B;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASI,MAAT,CAAiBC,OAAjB,EAA0BC,eAA1B,EAA2CC,QAA3C,EAAqD;AACnD,MAAMC,IAAI,GAAGN,SAAS,CAACG,OAAD,CAAtB;AACA,MAAII,KAAK,GAAGR,UAAU,CAACI,OAAD,CAAtB;;AAEA,MAAI,OAAOC,eAAP,KAA2B,QAA/B,EAAyC;AACvCG,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcN,eAAxB;AAAA,KAAb,CAAR;AACD,GAFD,MAEO,IAAIO,MAAM,CAACC,QAAP,CAAgBR,eAAhB,CAAJ,EAAsC;AAC3CG,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,aAAU,CAACA,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsBV,eAAtB,CAAX;AAAA,KAAb,CAAR;AACD,GAFM,MAEA;AACL,WAAOC,QAAQ,CAAC,IAAIU,KAAJ,CAAU,4CAAV,CAAD,EAA0D,IAA1D,CAAf;AACD;;AAEDd,EAAAA,MAAM,CAACK,IAAD,EAAOC,KAAP,EAAcF,QAAd,CAAN;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,MAAjB","sourcesContent":["'use strict'\n\nconst dagNodeUtil = require('./util')\nconst cloneLinks = dagNodeUtil.cloneLinks\nconst cloneData = dagNodeUtil.cloneData\nconst create = require('./create')\n\nfunction rmLink (dagNode, nameOrMultihash, callback) {\n  const data = cloneData(dagNode)\n  let links = cloneLinks(dagNode)\n\n  if (typeof nameOrMultihash === 'string') {\n    links = links.filter((link) => link.name !== nameOrMultihash)\n  } else if (Buffer.isBuffer(nameOrMultihash)) {\n    links = links.filter((link) => !link.multihash.equals(nameOrMultihash))\n  } else {\n    return callback(new Error('second arg needs to be a name or multihash'), null)\n  }\n\n  create(data, links, callback)\n}\n\nmodule.exports = rmLink\n"]},"metadata":{},"sourceType":"script"}