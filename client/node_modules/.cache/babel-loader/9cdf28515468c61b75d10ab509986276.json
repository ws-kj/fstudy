{"ast":null,"code":"var _jsxFileName = \"/home/wskj/src/fstudy/src/App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3.js';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Guide extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: 'Chinese to English Unit 1',\n      cards: {\n        \"Wo\": \"Me\",\n        \"Ni\": \"You\",\n        \"Hao\": \"Good\"\n      }\n    };\n\n    this.pack = () => {\n      let j = {};\n      j[this.state.title] = this.state.cards;\n      return Buffer.from(JSON.stringify(j));\n    };\n\n    this.unpack = buf => {\n      let json = JSON.parse(buf.toString());\n\n      for (const p in json) {\n        this.state.title = p;\n        this.state.cards = json[p];\n      }\n    };\n  }\n\n  render() {\n    const items = Object.entries(this.state.cards).map(([f, b]) => /*#__PURE__*/_jsxDEV(Card, {\n      front: f,\n      back: b\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      guide: null,\n      ipfsHash: null,\n      buffer: '',\n      guideBuffer: '',\n      title: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.setTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.convertToBuffer = async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting...\"\n        });\n        this.setState({\n          gasUsed: \"waiting...\"\n        });\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, txReceipt => {\n          console.log(txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.statetxReceipt.gasUsed\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      /*        \n              //test\n              web3.eth.getAccounts(console.log)\n      \n              const accounts = await web3.eth.getAccounts()\n      \n              console.log('Sending from Metamask account ' + accounts[0]);\n              */\n\n      const ethAddress = await storehash.options.address;\n      this.setState({\n        ethAddress\n      });\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n        storehash.methods.sendGuide(this.state.title, this.state.ipfsHash).send({\n          from: null\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({\n            transactionHash\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose file to send to ipfs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.Title,\n            onChange: this.setTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            bsStyle: \"primary\",\n            type: \"submit\",\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onClick,\n          children: \"Get Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tx Receipt Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Values\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"https://gateway.ipfs.io/ipfs/\", this.state.ipfsHash]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"IPFS Hash # on Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ipfsHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Ethereum Contract Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ethAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tx Hash # \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.transactionHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Block #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.blockNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Gas Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.gasUsed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/wskj/src/fstudy/src/App.js"],"names":["Table","Container","Button","Form","React","Component","web3","ipfs","storehash","Guide","state","title","cards","pack","j","Buffer","from","JSON","stringify","unpack","buf","json","parse","toString","p","render","items","Object","entries","map","f","b","Card","props","front","back","App","guide","ipfsHash","buffer","guideBuffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","setTitle","event","setState","target","value","convertToBuffer","reader","result","onClick","eth","getTransactionReceipt","console","log","statetxReceipt","error","onSubmit","preventDefault","options","address","add","err","hash","methods","sendGuide","send","Title"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3.js'\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'Chinese to English Unit 1',\n        cards:{\"Wo\":\"Me\", \"Ni\":\"You\", \"Hao\":\"Good\"},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        return(Buffer.from(JSON.stringify(j)));\n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.state.title = p;\n            this.state.cards = json[p];\n        }\n    }\n\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class App extends Component {\n    state = {\n        guide:null,\n        ipfsHash:null,\n        buffer:'',\n        guideBuffer:'',\n        title:'',\n        ethAddress:'',\n        blockNumber:'',\n        transactionHash:'',\n        gasUsed:'',\n        txReceipt:''\n    };\n    \n\n/*\n    captureFile = (event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)\n    };\n*/\n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    }\n\n    convertToBuffer = async(reader) => {\n        const buffer = await Buffer.from(reader.result);\n        this.setState({buffer});\n    }\n\n    onClick = async () => {\n        try {\n            this.setState({blockNumber:\"waiting...\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash, (txReceipt)  =>{\n                console.log(txReceipt);\n                this.setState({txReceipt});\n                });\n            await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n            await this.setState({gasUsed: this.statetxReceipt.gasUsed}); \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n/*        \n        //test\n        web3.eth.getAccounts(console.log)\n\n        const accounts = await web3.eth.getAccounts()\n\n        console.log('Sending from Metamask account ' + accounts[0]);\n        */\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n\n            storehash.methods.sendGuide(this.state.title, this.state.ipfsHash).send(\n            {from: null}, (error, transactionHash) => {\n                console.log(transactionHash);\n                this.setState({transactionHash});\n            });\n        })\n    }\n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <h3>Choose file to send to ipfs</h3>\n        <Form onSubmit={this.onSubmit}>\n            <input\n                type = \"text\"\n                value = {this.state.Title} \n                onChange = {this.setTitle}\n            />\n            \n            <Button bsStyle=\"primary\" type=\"submit\">\n                Upload!\n            </Button>\n        </Form>\n        <hr />\n        <Button onClick = {this.onClick}>Get Receipt</Button>\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Link</td>\n                    <td>https://gateway.ipfs.io/ipfs/{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>IPFS Hash # on Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                </tr>\n                <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                </tr>\n                <tr>\n                    <td>Block #</td>\n                    <td>{this.state.blockNumber}</td>\n                </tr>\n                <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                </tr>\n            </tbody>\n        </Table>\n    <Guide/>\n    </Container>\n</div>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}