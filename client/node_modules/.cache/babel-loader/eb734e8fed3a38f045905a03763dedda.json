{"ast":null,"code":"var _jsxFileName = \"/home/will/src/fstudy/client/src/App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; //import web3 from './web3.js'\n\nimport ipfs from './ipfs'; //import storehash from './storehash';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Guide extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      cards: {}\n    };\n\n    this.pack = () => {\n      let j = {};\n      j[this.state.title] = this.state.cards;\n      console.log(JSON.stringify(j));\n      return Buffer.from(JSON.stringify(j));\n    };\n\n    this.unpack = buf => {\n      let json = JSON.parse(buf.toString());\n\n      for (const p in json) {\n        this.setState({\n          title: p\n        });\n        this.setState({\n          cards: json[p]\n        });\n      }\n    };\n\n    this.populate = (t, c) => {\n      this.setState({\n        title: t\n      });\n      this.setState({\n        cards: c\n      });\n    };\n  }\n\n  render() {\n    const items = Object.entries(this.state.cards).map(_ref => {\n      let [f, b] = _ref;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        front: f,\n        back: b\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass GuideForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      idCards: [],\n      ipfsHash: ''\n    };\n\n    this.setTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.createCard = () => {\n      let obj = {\n        front: '',\n        back: ''\n      };\n      this.state.idCards.push(obj);\n      this.setState({\n        idCards: this.state.idCards\n      });\n    };\n\n    this.genGuide = async event => {\n      event.preventDefault();\n      let j = {};\n      j[this.state.title] = this.state.idCards;\n      console.log(JSON.stringify(j));\n      let buffer = Buffer.from(JSON.stringify(j));\n      await ipfs.add(buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n\n        if (this.state.ipfsHash === '') {\n          alert(\"Error uploading study guide, please try again soon.\");\n        } else {\n          let d = this.createApi();\n        }\n      });\n    };\n\n    this.createApi = async () => {\n      let api = '/api/create/' + this.state.ipfsHash;\n      console.log(api);\n      let r = fetch(api).then(response => response.json()).then(data => console.log(data['hash'])); //\t\t\t\t\t.then(data => window.location.assign(\"/guides/\" + data['hash']));\n    };\n\n    this.handleChange = (cid, pos) => event => {\n      if (pos == 0) {\n        this.state.idCards[cid].front = event.target.value;\n      } else {\n        this.state.idCards[cid].back = event.target.value;\n      }\n\n      this.setState({ ...this.state,\n        idCards: this.state.idCards\n      });\n    };\n  }\n\n  render() {\n    const items = this.state.idCards.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: i[0],\n          onChange: this.handleChange(i, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: i[1],\n          onChange: this.handleChange(i, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.genGuide,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.title,\n          onChange: this.setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.createCard,\n          children: \"Create Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Create Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      eguide: /*#__PURE__*/_jsxDEV(GuideForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 16\n      }, this),\n      guide: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: this.state.eguide\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/will/src/fstudy/client/src/App.js"],"names":["Table","Container","Button","Form","React","Component","ipfs","Guide","state","title","cards","pack","j","console","log","JSON","stringify","Buffer","from","unpack","buf","json","parse","toString","p","setState","populate","t","c","render","items","Object","entries","map","f","b","Card","props","front","back","GuideForm","idCards","ipfsHash","setTitle","event","target","value","createCard","obj","push","genGuide","preventDefault","buffer","add","err","hash","alert","d","createApi","api","r","fetch","then","response","data","handleChange","cid","pos","i","App","eguide","guide"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import web3 from './web3.js'\nimport ipfs from './ipfs';\n//import storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'',\n        cards:{},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        console.log(JSON.stringify(j));\n        return(Buffer.from(JSON.stringify(j)));\n        \n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.setState({title: p});\n            this.setState({cards: json[p]});\n        }\n    }\n\n    populate = (t,c) => {\n        this.setState({title: t});\n        this.setState({cards: c});\n    }\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GuideForm extends Component {\n    state = {\n        title: '',\n        idCards: [],     \n        ipfsHash: ''\n    };\n\n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    createCard = () => {\n        let obj = {\n            front: '',\n            back: ''\n        };\n        this.state.idCards.push(obj);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    genGuide = async (event) => {\n        event.preventDefault();\n\n        let j = {};\n        j[this.state.title] = this.state.idCards;\n        console.log(JSON.stringify(j));\n        let buffer = Buffer.from(JSON.stringify(j));\n\n        await ipfs.add(buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n            if(this.state.ipfsHash === '') {\n                alert(\"Error uploading study guide, please try again soon.\");\n            } else {\n\t\t\t\tlet d = this.createApi(); \n            }\n\n        });\n      \n\n    }\n   \n\tcreateApi = async () => {\n\t\t\t\tlet api = '/api/create/' + this.state.ipfsHash;\n\t\t\t\tconsole.log(api);\n\t\t\t\tlet r = fetch(api)\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => console.log(data['hash']));\n//\t\t\t\t\t.then(data => window.location.assign(\"/guides/\" + data['hash']));\n\t}\n\n    handleChange = (cid, pos) => (event) => {\n        if(pos == 0) {\n            this.state.idCards[cid].front = event.target.value;\n        } else {\n            this.state.idCards[cid].back = event.target.value;\n        }\n        this.setState({...this.state, idCards: this.state.idCards});\n    }\n\n    render() {\n        const items = this.state.idCards.map((c, i) =>\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[0]}\n                        onChange={this.handleChange(i, 0)}\n                     />\n               </div>\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[1]}\n                        onChange={this.handleChange(i, 1)}\n                    />\n                </div>\n            </div>\n        );\n\n        return (\n           <div className=\"guide\">\n                <Form onSubmit={this.genGuide}>\n                    <input \n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.setTitle}\n                    />\n                    <>{items}</>\n                    <Button variant=\"secondary\" onClick={this.createCard}>\n                        Create Card\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Guide\n                    </Button>\n                </Form>\n            </div>\n        );\n    };\n}\n\nexport default class App extends Component {\n    state = {\n        eguide:<GuideForm/>,\n        guide:null,\n    };\n    \n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <>{this.state.eguide}</>\n        <hr />\n        <Guide/>\n    </Container>\n</div>\n\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}