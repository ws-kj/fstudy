{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar dagPB = require('ipld-dag-pb');\n\nvar DAGNode = dagPB.DAGNode;\n\nvar Unixfs = require('ipfs-unixfs');\n\nmodule.exports = function (send) {\n  return promisify(function (template, callback) {\n    if (typeof template === 'function') {\n      callback = template;\n      template = undefined;\n    }\n\n    send({\n      path: 'object/new',\n      args: template\n    }, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      var data;\n\n      if (template) {\n        if (template !== 'unixfs-dir') {\n          return callback(new Error('unkown template: ' + template));\n        }\n\n        data = new Unixfs('directory').marshal();\n      } else {\n        data = Buffer.alloc(0);\n      }\n\n      DAGNode.create(data, function (err, node) {\n        if (err) {\n          return callback(err);\n        }\n\n        if (node.toJSON().multihash !== result.Hash) {\n          return callback(new Error('multihashes do not match'));\n        }\n\n        callback(null, node);\n      });\n    });\n  });\n};","map":{"version":3,"sources":["/home/wskj/src/node_modules/ipfs-api/src/object/new.js"],"names":["promisify","require","dagPB","DAGNode","Unixfs","module","exports","send","template","callback","undefined","path","args","err","result","data","Error","marshal","Buffer","alloc","create","node","toJSON","multihash","Hash"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,IAAME,OAAO,GAAGD,KAAK,CAACC,OAAtB;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAAC,aAAD,CAAtB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAOP,SAAS,CAAC,UAACQ,QAAD,EAAWC,QAAX,EAAwB;AACvC,QAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClCC,MAAAA,QAAQ,GAAGD,QAAX;AACAA,MAAAA,QAAQ,GAAGE,SAAX;AACD;;AACDH,IAAAA,IAAI,CAAC;AACHI,MAAAA,IAAI,EAAE,YADH;AAEHC,MAAAA,IAAI,EAAEJ;AAFH,KAAD,EAGD,UAACK,GAAD,EAAMC,MAAN,EAAiB;AAClB,UAAID,GAAJ,EAAS;AACP,eAAOJ,QAAQ,CAACI,GAAD,CAAf;AACD;;AAED,UAAIE,IAAJ;;AAEA,UAAIP,QAAJ,EAAc;AACZ,YAAIA,QAAQ,KAAK,YAAjB,EAA+B;AAC7B,iBAAOC,QAAQ,CAAC,IAAIO,KAAJ,CAAU,sBAAsBR,QAAhC,CAAD,CAAf;AACD;;AACDO,QAAAA,IAAI,GAAI,IAAIX,MAAJ,CAAW,WAAX,CAAD,CAA0Ba,OAA1B,EAAP;AACD,OALD,MAKO;AACLF,QAAAA,IAAI,GAAGG,MAAM,CAACC,KAAP,CAAa,CAAb,CAAP;AACD;;AAEDhB,MAAAA,OAAO,CAACiB,MAAR,CAAeL,IAAf,EAAqB,UAACF,GAAD,EAAMQ,IAAN,EAAe;AAClC,YAAIR,GAAJ,EAAS;AACP,iBAAOJ,QAAQ,CAACI,GAAD,CAAf;AACD;;AAED,YAAIQ,IAAI,CAACC,MAAL,GAAcC,SAAd,KAA4BT,MAAM,CAACU,IAAvC,EAA6C;AAC3C,iBAAOf,QAAQ,CAAC,IAAIO,KAAJ,CAAU,0BAAV,CAAD,CAAf;AACD;;AAEDP,QAAAA,QAAQ,CAAC,IAAD,EAAOY,IAAP,CAAR;AACD,OAVD;AAWD,KA9BG,CAAJ;AA+BD,GApCe,CAAhB;AAqCD,CAtCD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst dagPB = require('ipld-dag-pb')\nconst DAGNode = dagPB.DAGNode\nconst Unixfs = require('ipfs-unixfs')\n\nmodule.exports = (send) => {\n  return promisify((template, callback) => {\n    if (typeof template === 'function') {\n      callback = template\n      template = undefined\n    }\n    send({\n      path: 'object/new',\n      args: template\n    }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n\n      let data\n\n      if (template) {\n        if (template !== 'unixfs-dir') {\n          return callback(new Error('unkown template: ' + template))\n        }\n        data = (new Unixfs('directory')).marshal()\n      } else {\n        data = Buffer.alloc(0)\n      }\n\n      DAGNode.create(data, (err, node) => {\n        if (err) {\n          return callback(err)\n        }\n\n        if (node.toJSON().multihash !== result.Hash) {\n          return callback(new Error('multihashes do not match'))\n        }\n\n        callback(null, node)\n      })\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}