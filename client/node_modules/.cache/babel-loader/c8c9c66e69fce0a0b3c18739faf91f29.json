{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar streamToValue = require('../utils/stream-to-value');\n\nmodule.exports = function (send) {\n  return promisify(function (peerId, opts, callback) {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    send.andTransform({\n      path: 'dht/query',\n      args: peerId,\n      qs: opts\n    }, streamToValue, callback);\n  });\n};","map":{"version":3,"sources":["/home/will/src/fstudy/client/node_modules/ipfs-api/src/dht/query.js"],"names":["promisify","require","streamToValue","module","exports","send","peerId","opts","callback","andTransform","path","args","qs"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,0BAAD,CAA7B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,SAAOL,SAAS,CAAC,UAACM,MAAD,EAASC,IAAT,EAAeC,QAAf,EAA4B;AAC3C,QAAI,OAAOD,IAAP,KAAgB,UAAhB,IAA8B,CAACC,QAAnC,EAA6C;AAC3CA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD,KAJ0C,CAM3C;AACA;;;AACA,QAAI,OAAOA,IAAP,KAAgB,UAAhB,IAA8B,OAAOC,QAAP,KAAoB,UAAtD,EAAkE;AAChEA,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAEDF,IAAAA,IAAI,CAACI,YAAL,CAAkB;AAChBC,MAAAA,IAAI,EAAE,WADU;AAEhBC,MAAAA,IAAI,EAAEL,MAFU;AAGhBM,MAAAA,EAAE,EAAEL;AAHY,KAAlB,EAIGL,aAJH,EAIkBM,QAJlB;AAKD,GAlBe,CAAhB;AAmBD,CApBD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst streamToValue = require('../utils/stream-to-value')\n\nmodule.exports = (send) => {\n  return promisify((peerId, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts\n      opts = {}\n    }\n\n    // opts is the real callback --\n    // 'callback' is being injected by promisify\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts\n      opts = {}\n    }\n\n    send.andTransform({\n      path: 'dht/query',\n      args: peerId,\n      qs: opts\n    }, streamToValue, callback)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}