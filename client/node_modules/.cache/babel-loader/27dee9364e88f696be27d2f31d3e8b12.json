{"ast":null,"code":"'use strict';\n\nvar promisify = require('promisify-es6');\n\nvar once = require('once');\n\nvar cleanMultihash = require('../utils/clean-multihash');\n\nvar SendOneFile = require('../utils/send-one-file');\n\nmodule.exports = function (send) {\n  var objectGet = require('./get')(send);\n\n  var sendOneFile = SendOneFile(send, 'object/patch/set-data');\n  return promisify(function (multihash, data, opts, _callback) {\n    if (typeof opts === 'function') {\n      _callback = opts;\n      opts = {};\n    }\n\n    var callback = once(_callback);\n\n    if (!opts) {\n      opts = {};\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts);\n    } catch (err) {\n      return callback(err);\n    }\n\n    sendOneFile(data, {\n      args: [multihash]\n    }, function (err, result) {\n      if (err) {\n        return callback(err);\n      }\n\n      objectGet(result.Hash, {\n        enc: 'base58'\n      }, callback);\n    });\n  });\n};","map":{"version":3,"sources":["/home/will/src/fstudy/client/node_modules/ipfs-api/src/object/setData.js"],"names":["promisify","require","once","cleanMultihash","SendOneFile","module","exports","send","objectGet","sendOneFile","multihash","data","opts","_callback","callback","err","args","result","Hash","enc"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,cAAc,GAAGF,OAAO,CAAC,0BAAD,CAA9B;;AACA,IAAMG,WAAW,GAAGH,OAAO,CAAC,wBAAD,CAA3B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAU;AACzB,MAAMC,SAAS,GAAGP,OAAO,CAAC,OAAD,CAAP,CAAiBM,IAAjB,CAAlB;;AACA,MAAME,WAAW,GAAGL,WAAW,CAACG,IAAD,EAAO,uBAAP,CAA/B;AAEA,SAAOP,SAAS,CAAC,UAACU,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAsC;AACrD,QAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,MAAAA,SAAS,GAAGD,IAAZ;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;;AACD,QAAME,QAAQ,GAAGZ,IAAI,CAACW,SAAD,CAArB;;AACA,QAAI,CAACD,IAAL,EAAW;AACTA,MAAAA,IAAI,GAAG,EAAP;AACD;;AAED,QAAI;AACFF,MAAAA,SAAS,GAAGP,cAAc,CAACO,SAAD,EAAYE,IAAZ,CAA1B;AACD,KAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,aAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;;AAEDN,IAAAA,WAAW,CAACE,IAAD,EAAO;AAAEK,MAAAA,IAAI,EAAE,CAACN,SAAD;AAAR,KAAP,EAA8B,UAACK,GAAD,EAAME,MAAN,EAAiB;AACxD,UAAIF,GAAJ,EAAS;AACP,eAAOD,QAAQ,CAACC,GAAD,CAAf;AACD;;AACDP,MAAAA,SAAS,CAACS,MAAM,CAACC,IAAR,EAAc;AAAEC,QAAAA,GAAG,EAAE;AAAP,OAAd,EAAiCL,QAAjC,CAAT;AACD,KALU,CAAX;AAMD,GAtBe,CAAhB;AAuBD,CA3BD","sourcesContent":["'use strict'\n\nconst promisify = require('promisify-es6')\nconst once = require('once')\nconst cleanMultihash = require('../utils/clean-multihash')\nconst SendOneFile = require('../utils/send-one-file')\n\nmodule.exports = (send) => {\n  const objectGet = require('./get')(send)\n  const sendOneFile = SendOneFile(send, 'object/patch/set-data')\n\n  return promisify((multihash, data, opts, _callback) => {\n    if (typeof opts === 'function') {\n      _callback = opts\n      opts = {}\n    }\n    const callback = once(_callback)\n    if (!opts) {\n      opts = {}\n    }\n\n    try {\n      multihash = cleanMultihash(multihash, opts)\n    } catch (err) {\n      return callback(err)\n    }\n\n    sendOneFile(data, { args: [multihash] }, (err, result) => {\n      if (err) {\n        return callback(err)\n      }\n      objectGet(result.Hash, { enc: 'base58' }, callback)\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"script"}