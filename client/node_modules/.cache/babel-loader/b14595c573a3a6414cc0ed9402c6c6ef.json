{"ast":null,"code":"var _jsxFileName = \"/home/wskj/src/fstudy/src/App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3.js';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n    };\n\n    this.convertToBuffer = async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting...\"\n        });\n        this.setState({\n          gasUsed: \"waiting...\"\n        });\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.statetxReceipt.gasUsed\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault(); //test\n\n      web3.eth.getAccounts(console.log);\n      const accounts = await web3.eth.getAccounts();\n      console.log('Sending from Metamask account ' + accounts[0]);\n      const ethAddress = await storehash.options.address;\n      this.setState({\n        ethAddress\n      });\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n        storehash.methods.sendHash(this.state.ipfsHash).send({\n          from: accounts[0]\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({\n            transactionHash\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"IPFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Choose file to send to ipfs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.captureFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            bsStyle: \"primary\",\n            type: \"submit\",\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onClick,\n          children: \"Get Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tx Receipt Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Values\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"IPFS Hash # on Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ipfsHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Ethereum Contract Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ethAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tx Hash # \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.transactionHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Block #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.blockNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Gas Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.gasUsed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/wskj/src/fstudy/src/App.js"],"names":["Table","Container","Button","Form","React","Component","web3","ipfs","storehash","App","state","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","setState","onClick","eth","getTransactionReceipt","err","console","log","statetxReceipt","error","onSubmit","getAccounts","accounts","options","address","add","hash","methods","sendHash","send","render"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3.js'\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass App extends Component {\n    state = {\n        ipfsHash:null,\n        buffer:'',\n        ethAddress:'',\n        blockNumber:'',\n        transactionHash:'',\n        gasUsed:'',\n        txReceipt:''\n    };\n\n    captureFile = (event) => {\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        let reader = new window.FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = () => this.convertToBuffer(reader)\n    };\n\n    convertToBuffer = async(reader) => {\n        const buffer = await Buffer.from(reader.result);\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n        try {\n            this.setState({blockNumber:\"waiting...\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash,\n                (err, txReceipt)=>{\n                console.log(err,txReceipt);\n                this.setState({txReceipt});\n                });\n            await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n            await this.setState({gasUsed: this.statetxReceipt.gasUsed}); \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    onSubmit = async (event) => {\n        event.preventDefault()\n        \n        //test\n        web3.eth.getAccounts(console.log)\n\n        const accounts = await web3.eth.getAccounts()\n\n        console.log('Sending from Metamask account ' + accounts[0]);\n\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n\n            storehash.methods.sendHash(this.state.ipfsHash).send(\n            {from: accounts[0]}, (error, transactionHash) => {\n                console.log(transactionHash);\n                this.setState({transactionHash});\n            });\n        })\n    };\n\n    render() {\n        return (\n\n<div className=\"App\">\n    <header className=\"App-header\">\n        <h1>IPFS</h1>\n    </header>\n\n    <hr />\n    <Container>\n        <h3>Choose file to send to ipfs</h3>\n        <Form onSubmit={this.onSubmit}>\n            <input\n                type = \"file\"\n                onChange = {this.captureFile}\n            />\n            <Button bsStyle=\"primary\" type=\"submit\">\n                Upload!\n            </Button>\n        </Form>\n        <hr />\n        <Button onClick = {this.onClick}>Get Receipt</Button>\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>IPFS Hash # on Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                </tr>\n                <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                </tr>\n                <tr>\n                    <td>Block #</td>\n                    <td>{this.state.blockNumber}</td>\n                </tr>\n                <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                </tr>\n            </tbody>\n        </Table>\n    </Container>\n</div>\n\n        );\n    }\n}\n    \nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}