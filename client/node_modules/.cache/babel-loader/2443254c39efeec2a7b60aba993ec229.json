{"ast":null,"code":"var _jsxFileName = \"/home/wskj/src/fstudy/client/src/App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3.js';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Guide extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      cards: {}\n    };\n\n    this.pack = () => {\n      let j = {};\n      j[this.state.title] = this.state.cards;\n      return Buffer.from(JSON.stringify(j));\n    };\n\n    this.unpack = buf => {\n      let json = JSON.parse(buf.toString());\n\n      for (const p in json) {\n        this.setState({\n          title: p\n        });\n        this.setState({\n          cards: json[p]\n        });\n      }\n    };\n  }\n\n  render() {\n    const items = Object.entries(this.state.cards).map(([f, b]) => /*#__PURE__*/_jsxDEV(Card, {\n      front: f,\n      back: b\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass GuideForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      idCards: [['', '']],\n      //need index for dynamic relocation and such\n      ipfsHash: ''\n    };\n\n    this.setTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.createCard = () => {\n      this.state.idCards.push(['', '']);\n      this.setState({\n        idCards: this.state.idCards\n      });\n    };\n\n    this.genGuide = async event => {\n      event.preventDefault();\n      let g = new Guide();\n      g.title = this.state.title;\n      let c = {};\n\n      for (let i = 0; i < this.state.idCards.length; i++) {\n        c[this.state.idCards[i][0]] = this.state.idCards[i][1];\n      }\n\n      g.cards = c;\n      let buffer = g.pack();\n      await ipfs.add(buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        console.log(\"DOING\");\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n\n        if (this.state.ipfsHash === '') {\n          alert(\"Error uploading study guide, please try again soon.\");\n        } else {\n          console.log(this.state.ipfsHash);\n        }\n      });\n    };\n\n    this.handleChange = (cid, pos) => event => {\n      this.state.idCards[cid[pos]] = event.target.value;\n      console.log(cid + \" \" + pos);\n      this.setState({\n        idCards: this.state.idCards\n      });\n    };\n  }\n\n  render() {\n    const items = this.state.idCards.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: i[0],\n          onChange: this.handleChange(i, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: i[1],\n          onChange: this.handleChange(i, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.genGuide,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.title,\n          onChange: this.setTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.createCard,\n          children: \"Create Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Create Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eguide: /*#__PURE__*/_jsxDEV(GuideForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 16\n      }, this),\n      guide: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: this.state.eguide\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/wskj/src/fstudy/client/src/App.js"],"names":["Table","Container","Button","Form","React","Component","web3","ipfs","storehash","Guide","state","title","cards","pack","j","Buffer","from","JSON","stringify","unpack","buf","json","parse","toString","p","setState","render","items","Object","entries","map","f","b","Card","props","front","back","GuideForm","idCards","ipfsHash","setTitle","event","target","value","createCard","push","genGuide","preventDefault","g","c","i","length","buffer","add","err","console","log","hash","alert","handleChange","cid","pos","App","eguide","guide"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3.js'\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'',\n        cards:{},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        return(Buffer.from(JSON.stringify(j)));\n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.setState({title: p});\n            this.setState({cards: json[p]});\n        }\n    }\n\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GuideForm extends Component {\n    state = {\n        title: '',\n        idCards: [['', '']],     //need index for dynamic relocation and such\n        ipfsHash: ''\n    };\n\n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    createCard = () => {\n        this.state.idCards.push(['', '']);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    genGuide = async (event) => {\n        event.preventDefault();\n        let g = new Guide();\n        g.title = this.state.title;\n        let c = {};\n        for(let i=0; i<this.state.idCards.length; i++) {\n            c[this.state.idCards[i][0]] = this.state.idCards[i][1];\n        }\n        g.cards = c;\n        \n        let buffer = g.pack();\n\n        await ipfs.add(buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            console.log(\"DOING\");\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n            if(this.state.ipfsHash === '') {\n                alert(\"Error uploading study guide, please try again soon.\");\n            } else {\n                console.log(this.state.ipfsHash);\n            }\n        });\n    }\n    \n    handleChange = (cid, pos) => (event) => {\n        this.state.idCards[cid[pos]] = event.target.value;\n        console.log(cid + \" \" + pos);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    render() {\n        const items = this.state.idCards.map((c, i) =>\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[0]}\n                        onChange={this.handleChange(i, 0)}\n                     />\n               </div>\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[1]}\n                        onChange={this.handleChange(i, 1)}\n                    />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"guide\">\n                <Form onSubmit={this.genGuide}>\n                    <input \n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.setTitle}\n                    />\n                    <>{items}</>\n                    <Button variant=\"secondary\" onClick={this.createCard}>\n                        Create Card\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Guide\n                    </Button>\n                </Form>\n            </div>\n        );\n    };\n}\n\nexport default class App extends Component {\n    state = {\n        eguide:<GuideForm/>,\n        guide:null,\n    };\n    \n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <>{this.state.eguide}</>\n        <hr />\n        <Guide/>\n    </Container>\n</div>\n\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}