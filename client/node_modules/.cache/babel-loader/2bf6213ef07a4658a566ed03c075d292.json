{"ast":null,"code":"var _jsxFileName = \"/home/wskj/src/fstudy/client/src/App.js\";\nimport { Table, Container, Button, Form } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport web3 from './web3.js';\nimport ipfs from './ipfs';\nimport storehash from './storehash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Guide extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      cards: {}\n    };\n\n    this.pack = () => {\n      let j = {};\n      j[this.state.title] = this.state.cards;\n      return Buffer.from(JSON.stringify(j));\n    };\n\n    this.unpack = buf => {\n      let json = JSON.parse(buf.toString());\n\n      for (const p in json) {\n        this.setState({\n          title: p\n        });\n        this.setState({\n          cards: json[p]\n        });\n      }\n    };\n  }\n\n  render() {\n    const items = Object.entries(this.state.cards).map(([f, b]) => /*#__PURE__*/_jsxDEV(Card, {\n      front: f,\n      back: b\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), items]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.front\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.back\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass GuideForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      idCards: [] //need index for dynamic relocation and such\n\n    };\n\n    this.createCard = () => {\n      this.state.idCards.push(['', '']);\n    };\n\n    this.genGuide = () => {\n      let g = new Guide();\n      g.title = this.state.title; //g.cards = this.state.cards;\n\n      return g;\n    };\n\n    this.handleChange = (cid, pos) => event => {\n      this.state.idCards[cid[pos]] = event.target.value;\n    };\n  }\n\n  render() {\n    const items = this.state.idCards.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: c[0],\n          onChange: this.handleChange(c, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-face\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: c[1],\n          onChange: this.handleChange(c, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guide\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.genGuide,\n        children: [items, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.createCard,\n          children: \"Create Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Create Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eguide: new GuideForm(),\n      guide: null,\n      ipfsHash: null,\n      buffer: '',\n      title: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.setTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.convertToBuffer = async reader => {\n      const buffer = await Buffer.from(reader.result);\n      this.setState({\n        buffer\n      });\n    };\n\n    this.onClick = async () => {\n      try {\n        this.setState({\n          blockNumber: \"waiting...\"\n        });\n        this.setState({\n          gasUsed: \"waiting...\"\n        });\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, txReceipt => {\n          console.log(txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.statetxReceipt.gasUsed\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      /*        \n              //test\n              web3.eth.getAccounts(console.log)\n      \n              const accounts = await web3.eth.getAccounts()\n      \n              console.log('Sending from Metamask account ' + accounts[0]);\n              */\n\n      const ethAddress = await storehash.options.address;\n      this.setState({\n        ethAddress\n      });\n      this.setState({\n        guide: new Guide()\n      });\n      this.setState({\n        buffer: this.state.guide.pack()\n      });\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        console.log(err, ipfsHash);\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n        storehash.methods.sendGuide(this.state.title, this.state.ipfsHash).send({\n          from: null\n        }, (error, transactionHash) => {\n          console.log(transactionHash);\n          this.setState({\n            transactionHash\n          });\n        });\n      });\n    };\n\n    this.loadGuide = guide => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.Title,\n            onChange: this.setTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            bsStyle: \"primary\",\n            type: \"submit\",\n            children: \"Upload!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.onClick,\n          children: \"Get Receipt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Tx Receipt Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Values\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"https://gateway.ipfs.io/ipfs/\", this.state.ipfsHash]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"IPFS Hash # on Contract\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ipfsHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Ethereum Contract Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.ethAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Tx Hash # \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.transactionHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Block #\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.blockNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Gas Used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: this.state.gasUsed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Guide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(GuideForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/wskj/src/fstudy/client/src/App.js"],"names":["Table","Container","Button","Form","React","Component","web3","ipfs","storehash","Guide","state","title","cards","pack","j","Buffer","from","JSON","stringify","unpack","buf","json","parse","toString","p","setState","render","items","Object","entries","map","f","b","Card","props","front","back","GuideForm","idCards","createCard","push","genGuide","g","handleChange","cid","pos","event","target","value","c","App","eguide","guide","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","setTitle","convertToBuffer","reader","result","onClick","eth","getTransactionReceipt","console","log","statetxReceipt","error","onSubmit","preventDefault","options","address","add","err","hash","methods","sendGuide","send","loadGuide","Title"],"mappings":"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","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3.js'\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'',\n        cards:{},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        return(Buffer.from(JSON.stringify(j)));\n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.setState({title: p});\n            this.setState({cards: json[p]});\n        }\n    }\n\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GuideForm extends Component {\n    state = {\n        title: '',\n        idCards: []     //need index for dynamic relocation and such\n    };\n\n    createCard = () => {\n        this.state.idCards.push(['', '']);\n    }\n\n    genGuide = () => {\n        let g = new Guide();\n        g.title = this.state.title;\n        //g.cards = this.state.cards;\n        return g;\n    }\n    \n    handleChange = (cid, pos) => (event) => {\n        this.state.idCards[cid[pos]] = event.target.value;\n    }\n\n    render() {\n        const items = this.state.idCards.map((c) =>\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={c[0]}\n                        onChange={this.handleChange(c, 0)}\n                     />\n                </div>\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={c[1]}\n                        onChange={this.handleChange(c, 1)}\n                    />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"guide\">\n                <Form onSubmit={this.genGuide}>\n                    {items}\n                    <Button variant=\"secondary\" onClick={this.createCard}>\n                        Create Card\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Guide\n                    </Button>\n                </Form>\n            </div>\n        );\n    };\n}\n\nexport default class App extends Component {\n    state = {\n        eguide:new GuideForm(),\n        guide:null,\n        ipfsHash:null,\n        buffer:'',\n        title:'',\n        ethAddress:'',\n        blockNumber:'',\n        transactionHash:'',\n        gasUsed:'',\n        txReceipt:''\n    };\n    \n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    convertToBuffer = async(reader) => {\n        const buffer = await Buffer.from(reader.result);\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n        try {\n            this.setState({blockNumber:\"waiting...\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash, (txReceipt)  =>{\n                console.log(txReceipt);\n                this.setState({txReceipt});\n                });\n            await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n            await this.setState({gasUsed: this.statetxReceipt.gasUsed}); \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n/*        \n        //test\n        web3.eth.getAccounts(console.log)\n\n        const accounts = await web3.eth.getAccounts()\n\n        console.log('Sending from Metamask account ' + accounts[0]);\n        */\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n\n        this.setState({guide:new Guide()});\n        this.setState({buffer:this.state.guide.pack()});\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n\n            storehash.methods.sendGuide(this.state.title, this.state.ipfsHash).send(\n            {from: null}, (error, transactionHash) => {\n                console.log(transactionHash);\n                this.setState({transactionHash});\n            });\n        })\n    };\n\n    loadGuide = (guide) => {\n\n    }\n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <h3>Upload Guide</h3>\n        <Form onSubmit={this.onSubmit}>\n            <input\n                type = \"text\"\n                value = {this.state.Title} \n                onChange = {this.setTitle}\n            />\n            \n            <Button bsStyle=\"primary\" type=\"submit\">\n                Upload!\n            </Button>\n        </Form>\n        <hr />\n        <Button onClick = {this.onClick}>Get Receipt</Button>\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Link</td>\n                    <td>https://gateway.ipfs.io/ipfs/{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>IPFS Hash # on Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                </tr>\n                <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                </tr>\n                <tr>\n                    <td>Block #</td>\n                    <td>{this.state.blockNumber}</td>\n                </tr>\n                <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                </tr>\n            </tbody>\n        </Table>\n        <Guide/>\n        <GuideForm/>\n    </Container>\n</div>\n\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}