{"version":3,"sources":["App.js","ipfs.js","logo.svg","reportWebVitals.js","index.js"],"names":["Guide","state","title","cards","pack","j","console","log","JSON","stringify","Buffer","from","unpack","buf","json","parse","toString","p","setState","populate","t","c","items","Object","entries","this","map","f","b","Card","front","back","className","Component","props","GuideForm","idCards","ipfsHash","setTitle","event","target","value","createCard","push","genGuide","a","preventDefault","buffer","ipfs","add","err","hash","alert","createApi","api","fetch","then","response","data","handleChange","cid","pos","i","type","onChange","onSubmit","variant","onClick","App","eguide","guide","require","host","port","protocol","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62a473d7.chunk.js","sourcesContent":["import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import web3 from './web3.js'\nimport ipfs from './ipfs';\n//import storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'',\n        cards:{},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        console.log(JSON.stringify(j));\n        return(Buffer.from(JSON.stringify(j)));\n        \n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.setState({title: p});\n            this.setState({cards: json[p]});\n        }\n    }\n\n    populate = (t,c) => {\n        this.setState({title: t});\n        this.setState({cards: c});\n    }\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GuideForm extends Component {\n    state = {\n        title: '',\n        idCards: [],     \n        ipfsHash: ''\n    };\n\n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    createCard = () => {\n        let obj = {\n            front: '',\n            back: ''\n        };\n        this.state.idCards.push(obj);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    genGuide = async (event) => {\n        event.preventDefault();\n\n        let j = {};\n        j[this.state.title] = this.state.idCards;\n        console.log(JSON.stringify(j));\n        let buffer = Buffer.from(JSON.stringify(j));\n\n        await ipfs.add(buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n            if(this.state.ipfsHash === '') {\n                alert(\"Error uploading study guide, please try again soon.\");\n            } else {\n\t\t\t\tlet d = this.createApi();\n            }\n\n        });\n      \n\n    }\n   \n\tcreateApi = async () => {\n\t\t\t\tlet api = '/api/create/' + this.state.ipfsHash;\n\t\t\t\tconsole.log(api);\n\t\t\t\tlet r = fetch(api)\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => console.log(data));\n\t}\n\n    handleChange = (cid, pos) => (event) => {\n        if(pos == 0) {\n            this.state.idCards[cid].front = event.target.value;\n        } else {\n            this.state.idCards[cid].back = event.target.value;\n        }\n        this.setState({...this.state, idCards: this.state.idCards});\n    }\n\n    render() {\n        const items = this.state.idCards.map((c, i) =>\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[0]}\n                        onChange={this.handleChange(i, 0)}\n                     />\n               </div>\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[1]}\n                        onChange={this.handleChange(i, 1)}\n                    />\n                </div>\n            </div>\n        );\n\n        return (\n           <div className=\"guide\">\n                <Form onSubmit={this.genGuide}>\n                    <input \n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.setTitle}\n                    />\n                    <>{items}</>\n                    <Button variant=\"secondary\" onClick={this.createCard}>\n                        Create Card\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Guide\n                    </Button>\n                </Form>\n            </div>\n        );\n    };\n}\n\nexport default class App extends Component {\n    state = {\n        eguide:<GuideForm/>,\n        guide:null,\n    };\n    \n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <>{this.state.eguide}</>\n        <hr />\n        <Guide/>\n    </Container>\n</div>\n\n        );\n    };\n}\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}