{"version":3,"sources":["reportWebVitals.js","index.js","App.js","ipfs.js","logo.svg"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Guide","state","title","cards","pack","j","Buffer","from","JSON","stringify","unpack","buf","json","parse","toString","p","setState","items","Object","entries","this","map","f","b","Card","front","back","className","Component","props","GuideForm","idCards","ipfsHash","setTitle","event","target","value","createCard","push","genGuide","a","preventDefault","g","c","i","length","buffer","ipfs","add","err","console","log","hash","alert","handleChange","cid","pos","type","onChange","onSubmit","variant","onClick","eguide","guide","require","host","port","protocol"],"mappings":"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","file":"static/js/main.b8850645.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import web3 from './web3.js'\nimport ipfs from './ipfs';\n//import storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'',\n        cards:{},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        return(Buffer.from(JSON.stringify(j)));\n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.setState({title: p});\n            this.setState({cards: json[p]});\n        }\n    }\n\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass GuideForm extends Component {\n    state = {\n        title: '',\n        idCards: [['', '']],     //need index for dynamic relocation and such\n        ipfsHash: ''\n    };\n\n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    createCard = () => {\n        this.state.idCards.push(['', '']);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    genGuide = async (event) => {\n        event.preventDefault();\n        let g = new Guide();\n        g.title = this.state.title;\n        let c = {};\n        for(let i=0; i<this.state.idCards.length; i++) {\n            c[this.state.idCards[i][0]] = this.state.idCards[i][1];\n        }\n        g.cards = c;\n        \n        let buffer = g.pack();\n\n        await ipfs.add(buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            console.log(\"DOING\");\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n            if(this.state.ipfsHash === '') {\n                alert(\"Error uploading study guide, please try again soon.\");\n            } else {\n                console.log(this.state.ipfsHash);\n            }\n        });\n    }\n    \n    handleChange = (cid, pos) => (event) => {\n        this.state.idCards[cid[pos]] = event.target.value;\n        console.log(cid + \" \" + pos);\n        this.setState({idCards: this.state.idCards});\n    }\n\n    render() {\n        const items = this.state.idCards.map((c, i) =>\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[0]}\n                        onChange={this.handleChange(i, 0)}\n                     />\n               </div>\n                <div className=\"card-face\">\n                    <input\n                        type=\"text\"\n                        value={i[1]}\n                        onChange={this.handleChange(i, 1)}\n                    />\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"guide\">\n                <Form onSubmit={this.genGuide}>\n                    <input \n                        type=\"text\"\n                        value={this.state.title}\n                        onChange={this.setTitle}\n                    />\n                    <>{items}</>\n                    <Button variant=\"secondary\" onClick={this.createCard}>\n                        Create Card\n                    </Button>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Guide\n                    </Button>\n                </Form>\n            </div>\n        );\n    };\n}\n\nexport default class App extends Component {\n    state = {\n        eguide:<GuideForm/>,\n        guide:null,\n    };\n    \n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <>{this.state.eguide}</>\n        <hr />\n        <Guide/>\n    </Container>\n</div>\n\n        );\n    };\n}\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";"],"sourceRoot":""}