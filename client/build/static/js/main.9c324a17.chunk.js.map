{"version":3,"sources":["reportWebVitals.js","index.js","web3.js","storehash.js","App.js","ipfs.js","logo.svg"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","web3","Web3","window","currentProvider","ethereum","enable","eth","Contract","Guide","state","title","cards","pack","j","Buffer","from","JSON","stringify","unpack","buf","json","parse","toString","p","items","Object","entries","this","map","f","b","Card","front","back","className","Component","props","guide","ipfsHash","buffer","guideBuffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","setTitle","event","setState","target","value","convertToBuffer","reader","a","result","onClick","getTransactionReceipt","console","log","statetxReceipt","onSubmit","preventDefault","storehash","options","address","ipfs","add","err","hash","methods","sendGuide","send","error","loadGuide","type","Title","onChange","bsStyle","bordered","responsive","require","host","port","protocol"],"mappings":"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","file":"static/js/main.9c324a17.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import Web3 from 'web3';\n\nconst web3 = new Web3(window.web3.currentProvider);\nwindow.ethereum.enable();\n\nexport default web3;\n","import web3 from './web3';\n\n//const address = '0x30F151e58dF0e9D3360a32984BA95471CD264665';\n//\n\nconst address = '0x4f10a3E64CdD3e4e5B1B40003d7D230CEb47b7af';\nconst abi = [\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getHash\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"h\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getTitle\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"x\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"t\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"h\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"sendGuide\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]\n\n/*\nconst abi = [\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getName\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"x\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"x\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"sendName\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"getHash\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"x\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"name\": \"x\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"sendHash\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]\n*/\nexport default new web3.eth.Contract(abi, address);\n","import {Table, Container, Button, Form} from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport web3 from './web3.js'\nimport ipfs from './ipfs';\nimport storehash from './storehash';\n\nclass Guide extends Component {\n    state = {\n        title:'Chinese to English Unit 1',\n        cards:{\"Wo\":\"Me\", \"Ni\":\"You\", \"Hao\":\"Good\"},\n    };\n\n    pack = () => {\n        let j = {};\n        j[this.state.title] = this.state.cards;\n        return(Buffer.from(JSON.stringify(j)));\n    }\n\n    unpack = (buf) => {\n        let json = JSON.parse(buf.toString());\n        for(const p in json) {\n            this.state.title = p;\n            this.state.cards = json[p];\n        }\n    }\n\n    render() {\n        const items = Object.entries(this.state.cards).map(([f, b]) =>\n            <Card front={f} back={b}/>\n        );\n        return (\n            <div className=\"guide\">\n                <p>{this.state.title}</p>\n                {items}\n            </div>\n        );\n    }\n}\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-face\">\n                    <p>{this.props.front}</p>\n                </div>\n                <div className=\"card-face\">\n                    <p>{this.props.back}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class App extends Component {\n    state = {\n        guide:null,\n        ipfsHash:null,\n        buffer:'',\n        guideBuffer:'',\n        title:'',\n        ethAddress:'',\n        blockNumber:'',\n        transactionHash:'',\n        gasUsed:'',\n        txReceipt:''\n    };\n    \n    setTitle = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    convertToBuffer = async(reader) => {\n        const buffer = await Buffer.from(reader.result);\n        this.setState({buffer});\n    };\n\n    onClick = async () => {\n        try {\n            this.setState({blockNumber:\"waiting...\"});\n            this.setState({gasUsed:\"waiting...\"});\n            await web3.eth.getTransactionReceipt(this.state.transactionHash, (txReceipt)  =>{\n                console.log(txReceipt);\n                this.setState({txReceipt});\n                });\n            await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n            await this.setState({gasUsed: this.statetxReceipt.gasUsed}); \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    onSubmit = async (event) => {\n        event.preventDefault();\n/*        \n        //test\n        web3.eth.getAccounts(console.log)\n\n        const accounts = await web3.eth.getAccounts()\n\n        console.log('Sending from Metamask account ' + accounts[0]);\n        */\n        const ethAddress = await storehash.options.address;\n        this.setState({ethAddress});\n\n        this.setState({guide:new Guide()});\n        this.setState({buffer:this.state.guide.pack()});\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err,ipfsHash);\n            this.setState({ ipfsHash:ipfsHash[0].hash });\n\n            storehash.methods.sendGuide(this.state.title, this.state.ipfsHash).send(\n            {from: null}, (error, transactionHash) => {\n                console.log(transactionHash);\n                this.setState({transactionHash});\n            });\n        })\n    };\n\n    loadGuide = (guide) => {\n\n    }\n\n    render() {\n        return (\n\n<div className=\"App\">\n    <Container>\n        <h3>Upload Guide</h3>\n        <Form onSubmit={this.onSubmit}>\n            <input\n                type = \"text\"\n                value = {this.state.Title} \n                onChange = {this.setTitle}\n            />\n            \n            <Button bsStyle=\"primary\" type=\"submit\">\n                Upload!\n            </Button>\n        </Form>\n        <hr />\n        <Button onClick = {this.onClick}>Get Receipt</Button>\n        <Table bordered responsive>\n            <thead>\n                <tr>\n                    <th>Tx Receipt Category</th>\n                    <th>Values</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>Link</td>\n                    <td>https://gateway.ipfs.io/ipfs/{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>IPFS Hash # on Contract</td>\n                    <td>{this.state.ipfsHash}</td>\n                </tr>\n                <tr>\n                    <td>Ethereum Contract Address</td>\n                    <td>{this.state.ethAddress}</td>\n                </tr>\n                <tr>\n                    <td>Tx Hash # </td>\n                    <td>{this.state.transactionHash}</td>\n                </tr>\n                <tr>\n                    <td>Block #</td>\n                    <td>{this.state.blockNumber}</td>\n                </tr>\n                <tr>\n                    <td>Gas Used</td>\n                    <td>{this.state.gasUsed}</td>\n                </tr>\n            </tbody>\n        </Table>\n    <Guide/>\n    </Container>\n</div>\n\n        );\n    };\n}\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";"],"sourceRoot":""}